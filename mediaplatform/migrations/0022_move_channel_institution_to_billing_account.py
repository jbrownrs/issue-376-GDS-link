# Generated by Django 2.1.2 on 2018-10-19 14:55

from django.db import migrations, models
import django.db.models.deletion


def create_billing_account_association(apps, schema_editor):
    """
    Associate each channel with a billing account, creating the bulling accounts if necessary.

    """
    Channel = apps.get_model('mediaplatform', 'Channel')
    BillingAccount = apps.get_model('mediaplatform', 'BillingAccount')

    # Get a list of all distinct instids for current channels which do not already have a billing
    # account.
    instids_needing_billing_account = (
        Channel.objects.all()
        .exclude(owning_lookup_inst__in=(
            BillingAccount.objects
            .order_by('lookup_instid')
            .distinct('lookup_instid')
            .values_list('lookup_instid', flat=True)
        ))
        .order_by('owning_lookup_inst')
        .distinct('owning_lookup_inst')
        .values_list('owning_lookup_inst', flat=True)
    )

    # Assert that we did indeed get a list of distinct instids
    assert len(set(instids_needing_billing_account)) == len(instids_needing_billing_account)

    # Create a billing account for each institution without one
    BillingAccount.objects.bulk_create([
        BillingAccount(
            lookup_instid=instid,
            description=f'Lookup institution {instid}'
        )
        for instid in instids_needing_billing_account
    ])

    # Associate each channel with the appropriate account. Annoyingly if there are multiple
    # accounts for the same institution, which one the channels are assigned to is undefined.
    # Luckily we should not be running this migrations forward in a DB with multiple billing
    # accounts per institution.
    (
        Channel.objects.all()
        .annotate(institution_billing_account=(
            models.Subquery(BillingAccount.objects.filter(
                lookup_instid=models.OuterRef('owning_lookup_inst')
            ).values('id')[:1])
        ))
        .update(billing_account=models.F('institution_billing_account'))
    )


def reverse_billing_account_association(apps, schema_editor):
    """Roll back create_billing_account_association by unsetting all billing accounts in all
    channels. We do not delete the billing accounts since we do not know if they were created by
    us or were created/modified subsequent to this migration having been run.

    """
    Channel = apps.get_model('mediaplatform', 'Channel')
    BillingAccount = apps.get_model('mediaplatform', 'BillingAccount')

    # Reset lookup instid fields in channels from billing account. By design Django doesn't allow
    # using joins in update so we have to work around the fact that we can't just do the more
    # obvious "...update(owning_lookup_inst=models.F('billing_account__lookup_instid'))"
    Channel.objects.all().update(owning_lookup_inst=models.Subquery(
        BillingAccount.objects
        .filter(id=models.OuterRef('billing_account_id'))
        .values('lookup_instid')[:1]
    ))

    # Clear billing account fields in channels
    Channel.objects.all().update(billing_account=None)


class Migration(migrations.Migration):

    dependencies = [
        ('mediaplatform', '0021_create_billing_account'),
    ]

    operations = [
        migrations.AddField(
            model_name='channel',
            name='billing_account',
            field=models.ForeignKey(default=None, null=True,
                help_text='Billing account for the channel',
                on_delete=django.db.models.deletion.PROTECT,
                to='mediaplatform.BillingAccount', related_name='channels'),
            preserve_default=False,
        ),
        migrations.RunPython(create_billing_account_association, reverse_billing_account_association),
        migrations.AlterField(
            model_name='channel',
            name='billing_account',
            field=models.ForeignKey(default=None, null=False,
                help_text='Billing account for the channel',
                on_delete=django.db.models.deletion.PROTECT,
                to='mediaplatform.BillingAccount', related_name='channels'),
            preserve_default=False,
        ),
        migrations.RemoveField(
            model_name='channel',
            name='owning_lookup_inst',
        ),
    ]
