# docker-compose file for local development and testing with container image.
version: '3.2'
services:
  devserver: &devserver
    build:
      context: .
    expose:
      - "8000"
    ports:
      - "8000:8000"
    depends_on:
      - "db"
      - "debugsmtp"
    # For devserver, mount the local directory inside the container as a volume
    # to allow local changes to be reflected without having to re-build the
    # container.
    volumes:
      - type: volume
        source: ./
        target: /usr/src/app
        read_only: true
    environment:
      - PORT=8000
      - DJANGO_SETTINGS_MODULE=smswebapp.settings.developer
      - DJANGO_DB_ENGINE=django.db.backends.postgresql
      - DJANGO_DB_HOST=db
      - DJANGO_DB_NAME=mediaservice
      - DJANGO_DB_USER=mediaservice
      - DJANGO_DB_PASSWORD=databasePass
      - DJANGO_EMAIL_HOST=debugsmtp
      - DJANGO_EMAIL_PORT=1025
      - JWPLATFORM_API_KEY=${JWPLATFORM_API_KEY}
      - JWPLATFORM_API_SECRET=${JWPLATFORM_API_SECRET}
      - JWPLATFORM_EMBED_PLAYER_KEY=${JWPLATFORM_EMBED_PLAYER_KEY}
  tox:
    <<: *devserver
    entrypoint: ["tox"]
    command: [""]
    # DANGER, WILL ROBINSON! Making the application non-read only means that tox
    # can write its output but will do so as "root" so you may find yourself
    # having to remove .tox/ and build/ via sudo.
    volumes:
      - type: volume
        source: ./
        target: /usr/src/app
        read_only: false
  migrate:
    <<: *devserver
    command: ["migrate"]
  shell:
    <<: *devserver
    command: ["shell"]
  db:
    image: postgres
    environment:
      - POSTGRES_DB=mediaservice
      - POSTGRES_USER=mediaservice
      - POSTGRES_PASSWORD=databasePass
  debugsmtp:
    image: mailhog/mailhog
    ports:
      - "8025:8025"

