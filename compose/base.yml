# docker-compose file for local development and testing with container image.
version: '3.2'
services:
  db:
    image: postgres
    expose:
      - "5432"
    env_file:
      - base.env
    volumes:
      - media-postgres-data-local:/var/lib/postgresql/data
      - media-postgres-backup-local:/backups

  # Lookup proxy service
  lookupproxy:
    image: uisautomation/lookupproxy
    entrypoint: ["/tmp/wait-for-it.sh", "lookupproxy-db:5432", "--", "/tmp/start-devserver.sh"]
    expose:
      - "8080"
    ports:
      - "8080:8080"
    depends_on:
      - "lookupproxy-db"
      - "hydra"
    env_file:
      - lookupproxy.env
    volumes:
      - ./start-devserver.sh:/tmp/start-devserver.sh
      - ./wait-for-it.sh:/tmp/wait-for-it.sh
      - ./lookupproxysettings.py:/usr/src/app/settings.py
  lookupproxy-db:
    image: postgres
    env_file:
      - lookupproxy.env
    volumes:
      - media-lookupproxy-postgres-data-local:/var/lib/postgresql/data
      - media-lookupproxy-postgres-backup-local:/backups

  # Hydra OAuth2 infrastructure
  hydra:
    image: oryd/hydra:v0.11.6-alpine
    entrypoint: ["/tmp/start-hydra.sh"]
    ports:
      - "4444:4444"
      - "4445:4445"
    env_file:
      - hydra.env
    depends_on:
      - hydra-db
    volumes:
      - "./start-hydra.sh:/tmp/start-hydra.sh/:ro"
  hydra-consent:
    image: uisautomation/experimental-mock-consent-app
    env_file:
      - ./hydra-consent.env
    ports:
      - "8090:8090"
  # A service which waits for hydra to start and then creates the OAuth2
  # clients.
  hydra-create-clients:
    image: oryd/hydra:v0.11.6-alpine
    entrypoint: ["sh"]
    command: ["-c", "apk update && apk add bash && /tmp/create-oauth2-clients.sh"]
    env_file:
      - hydra.env
    depends_on:
      - hydra
    volumes:
      - "./wait-for-it.sh:/tmp/wait-for-it.sh/:ro"
      - "./create-oauth2-clients.sh:/tmp/create-oauth2-clients.sh/:ro"
  hydra-db:
    image: postgres
    env_file:
      - hydra.env
    volumes:
      - media-hydra-postgres-data-local:/var/lib/postgresql/data
      - media-hydra-postgres-backup-local:/backups


volumes:
  # Persistent volumes for postgres database data
  media-postgres-data-local:
  media-postgres-backup-local:
  media-lookupproxy-postgres-data-local:
  media-lookupproxy-postgres-backup-local:
  media-hydra-postgres-data-local:
  media-hydra-postgres-backup-local:
