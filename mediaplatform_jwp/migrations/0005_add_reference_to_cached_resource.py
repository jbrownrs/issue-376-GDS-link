# Generated by Django 2.1.1 on 2018-09-17 15:23

from django.db import migrations, models
import django.db.models.deletion


def migrate_channels(apps, schema_editor):
    """Set associated resources for all channels."""
    Channel = apps.get_model('mediaplatform_jwp', 'Channel')
    CachedResource = apps.get_model('mediaplatform_jwp', 'CachedResource')

    (
        Channel.objects.all()
        .annotate(matching_resource_id=models.Subquery(
            CachedResource.objects.filter(key=models.OuterRef('key'))
            .values_list('key')[:1]
        ))
        .filter(matching_resource_id__isnull=False)
    ).update(resource_id=models.F('matching_resource_id'))

    # There should be no channels which do not have a matching resource
    assert not Channel.objects.all().filter(resource__isnull=True).exists()


def reverse_channels(apps, schema_editor):
    Channel = apps.get_model('mediaplatform_jwp', 'Channel')
    Channel.objects.all().update(resource=None)


def migrate_videos(apps, schema_editor):
    """Set associated resources for all videos."""
    Video = apps.get_model('mediaplatform_jwp', 'Video')
    CachedResource = apps.get_model('mediaplatform_jwp', 'CachedResource')

    (
        Video.objects.all()
        .annotate(matching_resource_id=models.Subquery(
            CachedResource.objects.filter(key=models.OuterRef('key'))
            .values_list('key')[:1]
        ))
        .filter(matching_resource_id__isnull=False)
    ).update(resource_id=models.F('matching_resource_id'))

    # There should be no videos which do not have a matching resource
    assert not Video.objects.all().filter(resource__isnull=True).exists()


def reverse_videos(apps, schema_editor):
    Video = apps.get_model('mediaplatform_jwp', 'Video')
    Video.objects.all().update(resource=None)



class Migration(migrations.Migration):

    dependencies = [
        ('mediaplatform_jwp', '0004_remove_cached_resource_table'),
    ]

    operations = [
        migrations.AddField(
            model_name='channel',
            name='resource',
            field=models.OneToOneField(
                null=True, on_delete=django.db.models.deletion.CASCADE,
                related_name='channel', to='mediaplatform_jwp.CachedResource'
            ),
        ),
        migrations.RunPython(migrate_channels, reverse_code=reverse_channels),
        migrations.AlterField(
            model_name='channel',
            name='resource',
            field=models.OneToOneField(
                null=False, on_delete=django.db.models.deletion.CASCADE,
                related_name='channel', to='mediaplatform_jwp.CachedResource'
            ),
        ),
        migrations.AddField(
            model_name='video',
            name='resource',
            field=models.OneToOneField(
                null=True, on_delete=django.db.models.deletion.CASCADE,
                related_name='video', to='mediaplatform_jwp.CachedResource'
            ),
        ),
        migrations.RunPython(migrate_videos, reverse_code=reverse_videos),
        migrations.AlterField(
            model_name='video',
            name='resource',
            field=models.OneToOneField(
                null=False, on_delete=django.db.models.deletion.CASCADE,
                related_name='video', to='mediaplatform_jwp.CachedResource'
            ),
        ),
    ]
